{"version":3,"sources":["components/principal.js","components/signup.js","components/signin.js","components/navigation.js","components/layoutsign.js","components/messagestotal.js","components/StatusUsersTotal.js","components/Toast.js","components/globalchat.js","App.js","serviceWorker.js","index.js","audios/WhatsApp Mensaje Recibido.mp3"],"names":["principal","state","nombre","localStorage","getItem","console","log","to","style","width","display","title","src","this","StyleFrameMaps","Component","signup","email","password","msjSignUp","isAuthenticate","window","AgregarUsuario","bind","CambiarState","e","setState","target","name","value","preventDefault","fetch","method","headers","body","JSON","stringify","then","data","json","hasOwnProperty","props","history","push","message","catch","error","className","length","height","onSubmit","type","placeholder","onChange","required","autoComplete","signin","msjSignIn","ChangeState","IniciarSesion","setItem","location","href","document","querySelector","innerHTML","err","id","navigation","layoutnavigationsignsignin","Fragment","children","Messagestotal","StylesGroup","ArrayMessages","map","item","i","key","hora","msj","StatusUsersTotal","arregloListaUsuarios","status","color","fontSize","useStyle","makeStyles","colorTypo","informacion","classes","textDecoration","Box","alignItems","Avatar","flexGrow","Typography","align","Globalchat","audiomessage","React","createRef","mensaje","scrolling","element","scrollHeight","altura","scrollTop","Messages","StatusUsers","Changevars","clientIO","ClientIO","UpdateStateOffLineOnLine","emit","opcion","on","a","toast","info","Toast","autoClose","position","current","play","UpdateMessages","query","request","getMessages","Date","getHours","toPrecision","toString","getMinutes","getSeconds","toDateString","success","clear","sessionStorage","controls","ref","hidden","onClick","CerrarSesion","M","AutoInit","role","GoMessage","cols","detailsbutton","App","exact","path","component","GlobalChat","Signin","Principal","Signup","Boolean","hostname","match","client","ApolloClient","uri","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.1610c5a6.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport {Redirect} from  'react-router-dom';\n\nexport default class principal extends Component {\n    constructor(){\n        super();\n            this.state={\n               \n                nombre:\"daniel\"\n            }\n            //this.CerrarSesion.bind(this);\n        }\n    StyleFrameMaps(){\n        return {\n            \"width\":\"600px\",\n            \"height\":\"450px\",\n            \"border\":\"0\",\n            \"frameBorder\":\"0\",\n            \"allowFullScreen\":\"\",\n            \"position\":\"relative\",\n            \"margin\":\"auto\"\n            \n        }\n    }\n    render() {\n        if(localStorage.getItem(\"setAuthenticated\")!==null){\n            console.log(\"gaaaa principal\");\n            return <Redirect to='/profile'></Redirect>\n        };\n        return (\n            \n            <div>\n                <h1>Bienvenido al ejemplo chat de prueba</h1>\n                <p>Contacto : daniechoque159@gmail.com </p>\n                <p>Github : WasauskyOK</p>\n                <p>Localizacion de Investigación</p>\n                <div style={{width:\"100vw\",display:\"flex\"}}>\n                    <iframe title=\"Localización de estudios\"\n                         src=\"https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d3902.9125454851396!2d-77.00761298536557!3d-11.980553091511394!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x9105c5639b5e5631%3A0x92e4873e7f233e35!2sCIBERTEC!5e0!3m2!1ses-419!2spe!4v1574087520652!5m2!1ses-419!2spe\"\n                        style={this.StyleFrameMaps()} >\n                    </iframe>\n                </div>\n              \n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react';\nimport  {Redirect} from  'react-router-dom';\n/*offset-md-4*/\n// const  PopupErrorEmail=()=>{\n//     let msjcorreo=localStorage.getItem(\"correoinvalido\");  \n//     if(msjcorreo.length>0){\n//         return alert(\"Correo Invalido\");\n//     }\n//     return (<div>1</div>)\n// }\nexport default class signup extends Component {\n\n\n    constructor(){\n        super();\n        this.state={\n            email:\"\",\n            password:\"\",\n            msjSignUp:\"\",\n            isAuthenticate:window.localStorage.getItem(\"setAuthenticated\")\n            \n        }\n        this.AgregarUsuario.bind(this);\n        this.CambiarState.bind(this);\n    }\n\n    async CambiarState(e){\n        await this.setState({\n            [e.target.name]:e.target.value\n        });\n        console.log(this.state);\n    }\n    AgregarUsuario(e){\n        e.preventDefault();\n        const {email,password}=this.state;\n        //fetch(\"https://serverchatexample01.herokuapp.com/signup\",{\n        fetch(\"https://serverchatexample01.herokuapp.com/signup\",{\n            method:\"POST\",\n            headers:{\n                \"Content-Type\":\"application/json\"\n            },\n            body:JSON.stringify({email,password})\n        }).then(data=>{\n            return data.json();\n        }).then(data=>{\n            // if(data.hasOwnProperty(\"isAuthenticate\")){\n            //     //console.log(data)\n            //     alert(data.error);\n            // }\n            //console.log(\"message\" in data);\n            // if(data.isAuthenticate===true){\n            //     alert(`Usuario Agregado : ${data.email}`);\n            //     window.localStorage.getItem(\"setAuthenticated\",true);\n            //     //this.props.history.push('/signin');\n            //     window.location.href=\"/signin\";\n            // }\n            // if(data.hasOwnProperty(\"message\")){\n            //     alert(data.message);\n            // }\n            if(data.hasOwnProperty(\"email\")){\n                this.setState({\n                    msjSignUp:data.email\n                });\n                //alert(`Hey ${data.email} acabas de crearte una nueva cuenta`);\n                \n                this.props.history.push('/signin');\n            }\n            if(data.hasOwnProperty(\"message\")){\n                //alert(data.message);\n                this.setState({\n                    email:\"\",\n                    password:\"\",\n                    msjSignUp:data.message\n                })\n            }\n            console.log(data);\n        }).catch(error=>{\n            console.log(error);\n        });\n\n\n    }\n    componentDidMount(){\n        console.log(window.localStorage.getItem(\"setAuthenticated\"));\n    }\n    render() {\n        //const isAuthenticate=window.localStorage.getItem(\"setAuthenticated\");\n        if(localStorage.getItem(\"setAuthenticated\")!==null){\n            console.log(\"gaaaa signup\");\n            return <Redirect to='/profile'></Redirect>\n        }; \n        return (   \n            <div className=\"container border \">\n               {(this.state.msjSignUp.length>0)?<div className=\"alert alert-danger text-center  mt-2\">{this.state.msjSignUp}</div>:<div></div>}\n                <div className=\"row d-flex justify-content-center align-items-center\" style={{height:\"80vh\"}}>\n                    <div className=\"card shadow col-md-4 text-center\" >\n                        <div className=\"card-header\">\n                            <h5>Crear Cuenta</h5>\n                        </div>\n\n                        <div className=\"card-body text-center\">\n                            <form onSubmit={this.AgregarUsuario.bind(this)}>\n                                <div className=\"form-group\">\n                                    <input type=\"email\" placeholder=\"Ingresa tu correo\" value={this.state.email} name=\"email\" onChange={this.CambiarState.bind(this)} required className=\"mt-3 form-control\" autoComplete=\"off\"/>\n                                </div>\n\n                                <div className=\"form-group\">\n                                    <input type=\"password\" placeholder=\"Ingresa tu contraseña\" value={this.state.password} name=\"password\" onChange={this.CambiarState.bind(this)} required className=\"mt-3 form-control\" />\n                                </div>\n                                <button className=\"btn btn-success btn-block\" type=\"submit\">\n                                    Crear Cuenta\n                                </button>\n                            </form>\n                        </div>          \n                    </div>\n\n                \n\n\n                </div>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react';\nimport  {Redirect} from  'react-router-dom';\nexport default class signin extends Component {\n    constructor(){\n        super();\n        this.state={\n            email:\"\",\n            password:\"\",\n            msjSignIn:\"\"\n        }\n        this.ChangeState.bind(this);\n        this.IniciarSesion.bind(this);\n    }\n    async ChangeState(e){\n        await  this.setState({\n                [e.target.name]:e.target.value\n            });\n        }\n        IniciarSesion(e){\n            e.preventDefault();\n            const {email,password}=this.state;\n           // fetch(\"https://serverchatexample01.herokuapp.com/signin\",{\n         fetch(\"https://serverchatexample01.herokuapp.com/signin\",{\n           method:\"POST\",\n                headers:{\n                    \"Content-Type\":\"application/json\"\n                },\n                body:JSON.stringify({email,password})\n            })\n            .then(data=>data.json())\n            .then(data=>\n                {\n                    \n                        //const isAuthenticate=data.isAuthenticate;\n                        if(data.isAuthenticate===true){\n                            window.localStorage.setItem('setAuthenticated',true);\n                            window.localStorage.setItem('correoactivo',data.email);\n                            window.location.href=\"/profile\";\n                        }\n                        //this.props.history.push('/profile');\n                    \n                    if(data.error){\n                        document.querySelector(\"#TextosAleatorios\").innerHTML=data.error;\n                        this.setState({\n                            msjSignIn:data.error\n                        })\n                    }\n                }\n                )\n            .catch(err=>console.log(err));\n        }\n       \n    render() {\n        if(localStorage.getItem(\"setAuthenticated\")!==null){\n            console.log(\"gaaaa signin\");\n            return <Redirect to='/profile'></Redirect>\n        }; \n        return (\n            <div className=\"container border \">\n                 {(this.state.msjSignIn.length>0)?<div className=\"alert alert-danger text-center  mt-2\">{this.state.msjSignIn}</div>:<div></div>}\n                <div className=\"row d-flex justify-content-center align-items-center\" style={{height:\"80vh\"}}>\n                    <div className=\"card shadow col-md-4 text-center\" >\n                        <div className=\"card-header\">\n                            <h5>Iniciar Sesion</h5>\n                        </div>\n                        <p id=\"TextosAleatorios\"></p>\n                        <div className=\"card-body text-center\">\n                            <form onSubmit={this.IniciarSesion.bind(this)}>\n                                <div className=\"form-group\">\n                                    <input type=\"email\" placeholder=\"Ingresa tu correo\" name=\"email\" onChange={this.ChangeState.bind(this)} required className=\"mt-3 form-control\"  autoComplete=\"off\"/>\n                                </div>\n            \n                                <div className=\"form-group\">\n                                    <input type=\"password\" placeholder=\"Ingresa tu contraseña\" name=\"password\" onChange={this.ChangeState.bind(this)} required className=\"mt-3 form-control\" />\n                                </div>\n                                <button className=\"btn btn-success btn-block\">\n                                    Iniciar Sesion\n                                </button>\n                            </form>\n                        </div>          \n                    </div>\n\n                \n\n\n                </div>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport  {Link} from  'react-router-dom'\nexport default class navigation extends Component {\n    render() {\n        return (\n            <div className=\"d-flex bd-highlight bg-danger  mb-3 \">\n                \n                <div className=\"mr-auto p-2 \"><Link className=\"nav-link text-white\" to=\"/principal\">Inicio</Link></div>\n                <div className=\"p-2 bd-highlight\">\n\n                   \n                        <Link className=\"nav-link text-white\" to=\"/signin\">SignIn</Link>\n                  \n                    \n                    </div>\n                <div className=\"p-2 bd-highlight\"><Link className=\"nav-link text-white\" to=\"/signup\">SignUp</Link></div>\n          \n          </div>\n        )\n    }\n}\n","import React from 'react';\nimport  Navigation from  './navigation';\n\nconst  layoutnavigationsignsignin=  (props)  =>{\n\n    return (\n        <React.Fragment>\n            <Navigation/>\n            {props.children}\n        </React.Fragment>\n    );\n}\nexport default  layoutnavigationsignsignin;","import React, { Component } from 'react'\nimport '../styles/style.css';\n//import '../configurationdom/configmessages';\n\n\nexport default class Messagestotal extends Component {\n    \n    StylesGroup(){\n        return{\n            \"height\":\"400px\",\n            \n            \"marginBottom\":\"10px\"\n        }\n    }\n    render() {\n        return (\n            \n                <div className=\"list-group content-mensajes col-md-6 listamensajestotales\" style={this.StylesGroup()} id=\"scrollMensajes\">\n                   {\n                       this.props.ArrayMessages.map((item,i)=>{\n                        return(\n                            <div  className=\"list-group-item list-group-item-action active mb-2 bg-white text-dark border-white radius-5 rounded\" key={i}>\n                            <div className=\"d-flex w-100 justify-content-between\">\n                                   {\n                                       (item.email===window.localStorage.getItem(\"correoactivo\"))?\n                                       <h5 className=\"mb-1\">Yo</h5>\n                                       :\n                                       <h5 className=\"mb-1\">{item.email}</h5>\n                                   }\n                                    \n                                    \n                                    <small>{item.hora}</small>\n                            </div>\n                                <p className=\"mb-1\">{item.msj}</p>\n                                <small>Mensaje seguro</small>\n                        </div>\n                        )\n                       })\n                   }\n                  \n                </div>\n          \n        )\n    }\n}\n","import React, { Component } from 'react'\n\nexport default class StatusUsersTotal extends Component {\n    render() {\n        return (\n            <ul className=\"list-group mb-3 col-md-6\">\n            {\n                this.props.arregloListaUsuarios.map((item,i)=>{\n                    return(\n                        <li key={i} className=\"list-group-item d-flex justify-content-between align-items-center\">\n                    {item.email}\n                    {\n                    (item.status===\"online\")\n                    ?\n                    <span className=\"badge\" style={{color:\"green\"}}>{item.status}<i style={{color:\"green\",fontSize:\"1.2rem\"}} className=\"fas fa-user-alt\"></i></span>\n                    :\n                    <span className=\"badge\" style={{color:\"red\"}}>{item.status}<i style={{color:\"red\",fontSize:\"1.2rem\"}} className=\"fas fa-user-alt-slash\"></i></span>\n                    \n                    }\n                   \n                    </li>\n                    )\n                })\n            }\n            \n        </ul>\n        )\n    }\n}\n","import  React from 'react'\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport  {Avatar,Box,Typography} from '@material-ui/core';\r\nimport  {Link} from  'react-router-dom';\r\nconst useStyle=makeStyles({\r\n    \r\n    colorTypo:{\r\n        color:\"white\",\r\n        fontSize:\"16px\"\r\n    }\r\n\r\n\r\n});\r\nexport default  ({informacion})=>{\r\n   \r\nconst classes=useStyle();\r\n  return (\r\n   <Link to=\"#\" style={{textDecoration:\"none\"}}>\r\n        <Box\r\n           \r\n            \r\n            display=\"flex\"\r\n            alignItems=\"center\"\r\n        >\r\n            <Avatar src=\"https://i.pinimg.com/originals/1a/9a/f6/1a9af61c7d87345d9676e0f57f7bb97f.gif\"></Avatar>\r\n\r\n            <Box flexGrow={1}>\r\n                <Typography align=\"center\" className={classes.colorTypo}>{informacion.email}</Typography>\r\n                <Typography align=\"center\" className={classes.colorTypo}>{informacion.msj}</Typography>\r\n            </Box>\r\n\r\n        </Box>\r\n    </Link>\r\n)};\r\n\r\n","import React, { Component } from 'react';\nimport  ClientIO from 'socket.io-client';\nimport  MessagesTotal from './messagestotal';\nimport M from 'materialize-css';\nimport {Redirect,Link} from 'react-router-dom';\nimport  ListUsersStatus  from './StatusUsersTotal';\nimport  audiomessage from '../audios/WhatsApp Mensaje Recibido.mp3';\n\nimport  {ToastContainer,toast} from 'react-toastify';\nimport \"react-toastify/dist/ReactToastify.css\";\nimport  '../styles/styles2.css';\n\nimport  Toast from './Toast';\n\n\n\n    \n\nexport default class  Globalchat extends Component {\n    constructor(){\n        super();\n        this.state={\n            Messages:[],\n            email:\"\",\n            msj:\"\",\n            StatusUsers:[]\n        }\n       \n        \n        this.Changevars.bind(this);\n        //React.createRef(\"nombre\");\n        \n    }\n    audiomessage=React.createRef();\n    mensaje=React.createRef();\n    componentDidMount(){\n        // window.scrollTo(0,20);\n        //this.clientIO=ClientIO(\"https://serverchatexample01.herokuapp.com/\");\n        this.clientIO=ClientIO(\"https://serverchatexample01.herokuapp.com/\");\n        this.UpdateStateOffLineOnLine();\n        this.clientIO.emit('updatestatusoffline',{opcion:\"refreshstatuslist\"});\n        this.clientIO.on('updateliststatus',async (data)=>{\n            if(data.status===\"udpateGlobal\"){\n                this.UpdateStateOffLineOnLine();\n            }\n        })\n       // this.ConfigurateStatus();//actualizar estados\n        this.clientIO.on(\"messageBroadcast\",async (data)=>{\n            console.log(data,\"data ASSIGN GO\");\n            if(data.status===\"Running\"){\n               \n              await toast.info(<Toast informacion={data}/>,{\n                autoClose:2000,\n                position:\"top-left\",\n                className:\"bordetoast\"\n               });\n                //await  M.toast({html:`Existe  un nuevo mensaje , Revisalo !!!`});\n                 \n               await  this.audiomessage.current.play();\n                 await this.UpdateMessages();\n                 this.scrolling();\n            }\n        });\n        this.UpdateMessages();\n        // this.clientIO.on('gretting',(data)=>{\n        //     console.log(\"Saludo  : \"+data.message);\n        // });\n        this.scrolling();\n    }\n    // async ConfigurateStatus(){\n      \n       \n\n    //   // this.clientIO.emit(\"pedirlistausuarios\",{status:\"GoLista\"});\n\n    // //   await this.clientIO.emit(\"pedirlistausuarios\",{status:\"GoLista\"});\n    // //   await this.clientIO.on(\"usuariosoffon\",async (StatusUsers)=>{\n\n    // //      // await this.setState({StatusUsers});\n    // //     //  console.log(\"status state users\",this.state.StatusUsers);\n    // //       console.log(StatusUsers);\n    // //       console.log(\"USUARIOS ACTIVOS E INACTIVOS\");\n\n    // //   });\n\n        \n    // }\n\n    async UpdateStateOffLineOnLine(){\n        const email=window.localStorage.getItem(\"correoactivo\");\n        const  data=await fetch(`https://serverchatexample01.herokuapp.com/liststatususer/${email}`);\n        const StatusUsers=await  data.json();\n        this.setState({StatusUsers});\n\n    }\n\n    async UpdateMessages(){\n        \n        const  request=await  fetch(\"https://serverchatexample01.herokuapp.com/graphql\",{\n            method:\"POST\",\n            headers:{\n                \"Content-Type\":\"application/json\"\n            },\n            body:JSON.stringify({query:`{getMessages{id email msj hora}}`})\n        });\n        const  {data:{getMessages:Messages}}= await request.json();\n        this.setState({Messages});\n        console.log(this.state);\n        this.scrolling();\n    }\n    async GoMessage(e){\n        e.preventDefault();\n        const {msj}=this.state;\n        const  email=window.localStorage.getItem(\"correoactivo\");\n        const hora=`${new Date().getHours().toPrecision().toString()}:${new Date().getMinutes().toPrecision().toString()}:${new Date().getSeconds().toPrecision().toString()}  ${new Date().toDateString().toString()}`;\n       await this.clientIO.emit('messageGlobal',{email,msj,hora});\n        this.mensaje.current.value=\"\";\n       await toast.success(`${email} acabas de agregar un nuevo mensaje`,{\n        position:\"top-right\",\n        className:\"bordetoast\",\n        autoClose:2000\n       })\n\n       //M.toast({html:`${email} acabas de agregar un nuevo mensaje`});\n       this.UpdateMessages();\n        \n    }\n    async Changevars(e){\n     // eslint-disable-next-line \n        await this.setState({\n            [e.target.name]:e.target.value\n        });\n        console.log(this.state);\n    }\n    // ConfigName(){\n    //     let name=window.prompt('Escribe tu nombre o apodo Amigo');\n    //     localStorage.setItem(\"NameUser\",name);\n    // }\n    detailsbutton(){\n        return{\n            \"height\":\"70px\",\n            \"fontSize\":\"2rem\",\n            \"textAlign\":\"center\"\n        }\n    }\n    \n    async CerrarSesion(){\n\n        // const email=window.localStorage.getItem('correoactivo')\n        // await fetch('http://localhost:5000/statusofflineuser',{\n        //     method:'PUT',\n        //     headers:{\n        //         \"Content-Type\":\"application/json\",\n        //     },\n        //     body:JSON.stringify({email})\n        // })\n        // .then(async  data=>{\n        //     const {message}=await data.json();\n           \n        //     alert(message);\n        // })\n        // // .then(data=>{\n        // //     alert(data.message);\n        // // })\n        // .catch(err=>{\n        //     alert(err.message);\n        // });\n        const  email=window.localStorage.getItem(\"correoactivo\");\n        await  this.clientIO.emit('updatestatusoffline',{email,opcion:\"offline\"});\n        await  localStorage.setItem(\"setAuthenticated\",false);\n        await localStorage.clear();\n        sessionStorage.clear();  \n        \n       \n\n        //window.localStorage.clear();\n          this.props.history.push('/signin');\n          //window.location.href=\"/signin\";\n      }\n\n      scrolling = () =>{\n          const element=document.querySelector(\".listamensajestotales\");\n            //element.style.backgroundColor=\"blue\";\n                // baja el scroll principal a una area visible\n          //element.scrollIntoView({block: \"end\", behavior: \"smooth\"});\n            //const altura=element.clientHeight;\n                //const altura=element.offsetHeight;\n                if(element && element.scrollHeight){\n                    \n                    const altura=element.scrollHeight;\n                    element.scrollTop=altura;        \n                }\n            \n            //alert(altura);\n           // element.scrollTop=altura;\n      }\n\n    render() {\n        if(localStorage.getItem(\"setAuthenticated\")===null){\n            console.log(\"gaaaa\");\n            return <Redirect to='/signin'></Redirect>\n        }; \n        return (\n\n            <div className=\"fondoPantalla\">\n                <ToastContainer/>\n           <audio src={audiomessage} controls ref={this.audiomessage} hidden></audio>\n              <div>\n                  <div className=\"d-flex bd-highlight bg-danger  mb-3\">\n                          <div className=\"mr-auto p-2 \"><Link className=\"nav-link text-white\" to=\"/profile\">Usuario  Activo : {window.localStorage.getItem(\"correoactivo\")}</Link></div>\n                        <div className=\"p-2 bd-highlight\">\n                            <button className=\"btn  btn-danger text-white text-center\" style={{height:\"70px\"}} onClick={this.CerrarSesion.bind(this)} >Cerrar Sesion</button>\n                        </div>\n\n                </div>\n            \n            </div>\n\n\n                {M.AutoInit()}\n                <div className=\"alert alert-primary mt-3 text-center bg-dark text-white\"  role=\"alert\">\n                     <p>Example simple chat global (WasauskyOK)</p>\n                     <p>contact : daniechoque159@gmail.com </p>\n                    \n                </div>\n               \n                <div className=\"row\">\n                    <div className=\"col-12\">\n                            \n                            {/* <input type=\"email\" name=\"email\" className=\"form-control mb-4 col-8\" placeholder=\"Ingresa tu correo\" onChange={this.Changevars.bind(this)}/>\n                             */}\n                    </div>\n                    \n                </div>\n\n\n                            {\n                                /*\n                                    BLOQUE  INICIAL DE  CHAT  +LISTA DE USUARIOS CONECTADOS Y DESCONECTADOS\n                                */\n                            }\n           <div className=\" fondoPantalla mx-2\">\n                <div className=\"card-body\">\n                    <div className=\"row px-lg-2 px-2\">\n                        <ListUsersStatus arregloListaUsuarios={this.state.StatusUsers}/>\n                         <MessagesTotal ArrayMessages={this.state.Messages}/>\n                    </div>\n                </div>\n            </div>\n                 \n               \n               {\n                   /*\n                        BLOQUE TERMINADO DE CHAT + LISTA DE USUARIOS \n                   */\n               }\n               \n                <div className=\"row\">\n                    <div className=\"col-12\">\n                        <div style={{height:\"15vh\"}} className=\"form-group\">\n                             <form className=\"d-flex align-items-center\" onSubmit={this.GoMessage.bind(this)}>      \n                            <textarea style={{height:\"100%\"}} cols=\"20\"  name=\"msj\" ref={this.mensaje} onChange={this.Changevars.bind(this)} className=\"form-control  mr-5\" placeholder=\"Escribe algo :D\">\n                            </textarea>\n                            <button type=\"submit\" style={this.detailsbutton()} className=\"btn btn-success col-3 font-weight-bold\">Go</button>\n                            </form>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    };\n}\n","import React from 'react';\n\nimport  {BrowserRouter,Switch,Route} from  'react-router-dom';\nimport  Principal from  './components/principal';\nimport  Signup from  './components/signup';\nimport  Signin from  './components/signin';\nimport  LayoutPrimaryNavigation from  './components/layoutsign';\n//import  Profile from './components/profile';\nimport GlobalChat from './components/globalchat';\nfunction App() {\n  return (\n    <BrowserRouter>\n      <Switch>\n        \n        <Route exact path=\"/profile\" component={GlobalChat}/>\n        <LayoutPrimaryNavigation>\n          <Route exact path=\"/\" component={Signin}/>\n          <Route exact path=\"/principal\" component={Principal}/>\n          <Route exact path=\"/signup\" component={Signup}/>\n          <Route exact path=\"/signin\" component={Signin}/>\n        </LayoutPrimaryNavigation>\n        \n      </Switch>\n    </BrowserRouter>\n  );\n};\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport  {ApolloProvider} from  '@apollo/react-hooks';\nimport  ApolloClient from 'apollo-boost';\n\n    const client= new ApolloClient({\n        uri:\"https://serverchatexample01.herokuapp.com/graphql\"\n    });\n\nReactDOM.render(\n<ApolloProvider client={client}>\n<App />\n</ApolloProvider>\n, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/WhatsApp Mensaje Recibido.0f93fa9c.mp3\";"],"sourceRoot":""}